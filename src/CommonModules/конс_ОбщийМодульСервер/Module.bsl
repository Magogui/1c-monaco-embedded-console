#Область ПрограммныйИнтерфейс

Процедура ПриСозданииНаСервере(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
	Элементы.конс_Код.УстановитьДействие("ДокументСформирован", "конс_ПодключаемыйДокументСформирован");
	Элементы.конс_Код.УстановитьДействие("ПриНажатии", "конс_ПодключаемыйПриНажатии");
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_ТолькоДляЧтения", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_ИсходникиЗагружены", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_БыстрыеПодсказки", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_ПодсвечиватьЗапросы", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_ВидимостьСтрокиСостояния", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_ДокументЗагружен", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_ЭтоИзменениеСтраницы", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_КлючАктивнойСтраницы", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_КлючАктивированнойСтраницы", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_ИндексныйФайл", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_АдресМакета", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_АдресОбщихМодулей", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_СоответствияКодовНаСтранице", Новый ОписаниеТипов());
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_ИменаОбщихМодулей", Новый ОписаниеТипов());
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	ДобавляемыйРеквизит	= Новый РеквизитФормы("конс_ГлобальныйМодули", Новый ОписаниеТипов());
	ДобавляемыеРеквизиты.Добавить(ДобавляемыйРеквизит);
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Форма.конс_АдресМакета = ПоместитьВоВременноеХранилище(ПолучитьОбщийМакет("конс_src"), Новый УникальныйИдентификатор());
	
	КоллекцияОбщихМодулей			= ПолучитьКоллекциюОбщихМодулей();
	Форма.конс_АдресОбщихМодулей	= СохранитьОбщиеМодулиВХранилище(КоллекцияОбщихМодулей);
	
	ЗаполнитьИменаОбщихМодулей(Форма, КоллекцияОбщихМодулей);
	
	Форма.конс_БыстрыеПодсказки = Истина;
	Форма.конс_ПодсвечиватьЗапросы = Истина;
	Форма.конс_ВидимостьСтрокиСостояния = Истина;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СоответствиеРеквизитовИЭлементовПравилЗагрузки(Знач Объект) Экспорт
	
	СоответствияКодовНаСтранице = Новый Структура;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Реквизит", "КодПередОбработкойДанных"); 
	СтруктураРеквизитов.Вставить("Код", Объект.КодПередОбработкойДанных);
	СоответствияКодовНаСтранице.Вставить("ДекорацияПередОбработкойДанных", СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Реквизит", "КодПоискаОбъекта"); 
	СтруктураРеквизитов.Вставить("Код", Объект.КодПоискаОбъекта);
	СоответствияКодовНаСтранице.Вставить("ДекорацияАлгоритмПоиска", СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Реквизит", "КодЗаполненияДереваРеквизитов"); 
	СтруктураРеквизитов.Вставить("Код", Объект.КодЗаполненияДереваРеквизитов);
	СоответствияКодовНаСтранице.Вставить("ДекорацияДеревоРеквизитов", СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Реквизит", "КодОбработкаДанных"); 
	СтруктураРеквизитов.Вставить("Код", Объект.КодОбработкаДанных);
	СоответствияКодовНаСтранице.Вставить("ДекорацияОбработкаДанных", СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Реквизит", "КодПослеОбработкиДанных"); 
	СтруктураРеквизитов.Вставить("Код", Объект.КодПослеОбработкиДанных);
	СоответствияКодовНаСтранице.Вставить("ДекорацияПослеОбработкиДанных", СтруктураРеквизитов);
	
	Возврат СоответствияКодовНаСтранице;
	
КонецФункции

Функция СоответствиеРеквизитовИЭлементовПравилВыгрузки(Знач Объект) Экспорт
	
	СоответствияКодовНаСтранице = Новый Структура;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Реквизит", "КодПередОбработкойДанных"); 
	СтруктураРеквизитов.Вставить("Код", Объект.КодПередОбработкойДанных);
	СоответствияКодовНаСтранице.Вставить("ДекорацияПередОбработкойДанных", СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Реквизит", "ПолучениеДанных_Запрос"); 
	СтруктураРеквизитов.Вставить("Код", Объект.ПолучениеДанных_Запрос);
	СоответствияКодовНаСтранице.Вставить("ДекорацияПолучениеДанных", СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Реквизит", "КодЗаполненияДереваАтрибутов"); 
	СтруктураРеквизитов.Вставить("Код", Объект.КодЗаполненияДереваАтрибутов);
	СоответствияКодовНаСтранице.Вставить("ДекорацияДеревоАтрибутов", СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Реквизит", "КодОбработкаДанных"); 
	СтруктураРеквизитов.Вставить("Код", Объект.КодОбработкаДанных);
	СоответствияКодовНаСтранице.Вставить("ДекорацияОбработкаДанных", СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Реквизит", "КодПослеОбработкиДанных"); 
	СтруктураРеквизитов.Вставить("Код", Объект.КодПослеОбработкиДанных);
	СоответствияКодовНаСтранице.Вставить("ДекорацияПослеОбработкиДанных", СтруктураРеквизитов);
	
	Возврат СоответствияКодовНаСтранице;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьКоллекциюОбщихМодулей()
	
	КоллекцияОбщихМодулей = Новый Структура();
	КоллекцияОбщихМодулей.Вставить("Общие", ОписатьОбщиеМодули(Метаданные.ОбщиеМодули, Ложь));
	КоллекцияОбщихМодулей.Вставить("Глобальные", ОписатьОбщиеМодули(Метаданные.ОбщиеМодули, Истина));
	
	Возврат КоллекцияОбщихМодулей;
	
КонецФункции

Функция ОписатьОбщиеМодули(Коллекция, ФильтрГлобальный = Ложь)
	
	ОписаниеКоллекции = Новый Структура();
	
	Для НомерОбъекта = 0 По Коллекция.Количество() - 1 Цикл
		ОбъектМетаданных = Коллекция.Получить(НомерОбъекта);
		Если ОбъектМетаданных.Глобальный = ФильтрГлобальный Тогда
			ОписаниеКоллекции.Вставить(ОбъектМетаданных.Имя, Новый Структура());
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОписаниеКоллекции;
	
КонецФункции

Функция СохранитьОбщиеМодулиВХранилище(КоллекцияОбщихМодулей)
	
	Файл = Новый ЗаписьJSON();
	Файл.УстановитьСтроку();
	Попытка
		ЗаписатьJSON(Файл, КоллекцияОбщихМодулей.Общие);
	Исключение
		ВызватьИсключение("Не удалось сохранить коллекцию метаданных:" + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;
	
	ЗначениеКоллекции = Файл.Закрыть();
	
	Возврат ПоместитьВоВременноеХранилище(ЗначениеКоллекции, Новый УникальныйИдентификатор());
	
КонецФункции

Процедура ЗаполнитьИменаОбщихМодулей(Форма, КоллекцияОбщихМодулей)
	
	// Соответствие между именем общего неглобального модуля в нижнем регистре
	// и именем модуля, как оно задано в конфигураторе для правильной загрузки
	// текстов общих модулей
	ОбщиеМодули = Новый Соответствие();
	
	Для Каждого Обход Из КоллекцияОбщихМодулей.Общие Цикл
		ОбщиеМодули.Вставить(НРег(Обход.Ключ), Обход.Ключ);
	КонецЦикла;
	
	Форма.конс_ИменаОбщихМодулей = Новый ФиксированноеСоответствие(ОбщиеМодули);
	
	// Именя глобальных модулей для загрузки текстов
	Модули = Новый Массив();
	
	Для Каждого Обход Из КоллекцияОбщихМодулей.Глобальные Цикл
		Модули.Добавить(Обход.Ключ);
	КонецЦикла;
	
	Форма.конс_ГлобальныйМодули = Новый ФиксированныйМассив(Модули);
	
КонецПроцедуры

#КонецОбласти